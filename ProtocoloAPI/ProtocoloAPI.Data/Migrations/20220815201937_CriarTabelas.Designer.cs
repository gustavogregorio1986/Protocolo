// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProtocoloAPI.Data.Contexto;

namespace ProtocoloAPI.Data.Migrations
{
    [DbContext(typeof(ProtocloAPIContexto))]
    [Migration("20220815201937_CriarTabelas")]
    partial class CriarTabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Administrador", b =>
                {
                    b.Property<int>("IdAdm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAdm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Login")
                        .HasColumnType("int");

                    b.Property<string>("NomeAdm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdm");

                    b.HasIndex("Id_Login");

                    b.ToTable("tb_Administrador");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.HasIndex("Id_Empresa");

                    b.ToTable("tb_Cliente");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpnj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Protocolo")
                        .HasColumnType("int");

                    b.Property<string>("NomeEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumFuncionario")
                        .HasColumnType("int");

                    b.HasKey("IdEmpresa");

                    b.HasIndex("Id_Protocolo");

                    b.ToTable("tb_Empresa");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Endereco", b =>
                {
                    b.Property<int>("IdEWmdereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Lograudouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEWmdereco");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("tb_Endereco");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Login", b =>
                {
                    b.Property<int>("IdLogin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLogin");

                    b.ToTable("tb_Login");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Protocolo", b =>
                {
                    b.Property<int>("IdProtocolo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<int>("NumProtocolo")
                        .HasColumnType("int");

                    b.HasKey("IdProtocolo");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("tb_Protocolo");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Login")
                        .HasColumnType("int");

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Id_Login");

                    b.ToTable("tb_Usuario");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Administrador", b =>
                {
                    b.HasOne("ProtocoloAPI.Dominio.Dominio.Login", "Login")
                        .WithMany()
                        .HasForeignKey("Id_Login")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Cliente", b =>
                {
                    b.HasOne("ProtocoloAPI.Dominio.Dominio.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Id_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Empresa", b =>
                {
                    b.HasOne("ProtocoloAPI.Dominio.Dominio.Protocolo", "Protocolo")
                        .WithMany()
                        .HasForeignKey("Id_Protocolo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Protocolo");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Endereco", b =>
                {
                    b.HasOne("ProtocoloAPI.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Protocolo", b =>
                {
                    b.HasOne("ProtocoloAPI.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProtocoloAPI.Dominio.Dominio.Usuario", b =>
                {
                    b.HasOne("ProtocoloAPI.Dominio.Dominio.Login", "Login")
                        .WithMany()
                        .HasForeignKey("Id_Login")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });
#pragma warning restore 612, 618
        }
    }
}
